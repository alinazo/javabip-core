package org.bip.executor;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;

import org.bip.api.BIPEngine;
import org.bip.api.BIPGlue;
import org.bip.api.Executor;
import org.bip.engine.BIPCoordinatorImpl;
import org.bip.engine.DataCoordinatorKernel;
import org.bip.engine.api.EngineFactory;
import org.bip.executor.impl.akka.OrchestratedExecutorFactory;
import org.bip.glue.GlueBuilder;
import org.bip.spec.Peer;
import org.bip.spec.Tracker;
import org.junit.Test;

import akka.actor.ActorSystem;

public class AkkaTrackersAndPeers55to100Tests {

	@Test
	public void TrackerPeer55Test() {

		ActorSystem system = ActorSystem.create("MySystem");
		OrchestratedExecutorFactory factory = new OrchestratedExecutorFactory(system);
		EngineFactory engineFactory = new EngineFactory(system);
		BIPEngine engine = engineFactory.create("myEngine", new DataCoordinatorKernel(new BIPCoordinatorImpl()));

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);

		final Executor executor1 = factory.create(engine, tracker1, "1", true);
		final Executor executor2 = factory.create(engine, tracker2, "2", true);
		final Executor executor3 = factory.create(engine, tracker3, "3", true);
		final Executor executor4 = factory.create(engine, tracker4, "4", true);
		final Executor executor5 = factory.create(engine, tracker5, "5", true);
		final Executor executor6 = factory.create(engine, tracker6, "6", true);
		final Executor executor7 = factory.create(engine, tracker7, "7", true);
		final Executor executor8 = factory.create(engine, tracker8, "8", true);
		final Executor executor9 = factory.create(engine, tracker9, "9", true);
		final Executor executor10 = factory.create(engine, tracker10, "10", true);
		final Executor executor110 = factory.create(engine, tracker110, "110", true);
		final Executor executor11 = factory.create(engine, peer1, "11", true);
		final Executor executor12 = factory.create(engine, peer2, "12", true);
		final Executor executor13 = factory.create(engine, peer3, "13", true);
		final Executor executor14 = factory.create(engine, peer4, "14", true);
		final Executor executor15 = factory.create(engine, peer5, "15", true);
		final Executor executor16 = factory.create(engine, peer6, "16", true);
		final Executor executor17 = factory.create(engine, peer7, "17", true);
		final Executor executor18 = factory.create(engine, peer8, "18", true);
		final Executor executor19 = factory.create(engine, peer9, "19", true);
		final Executor executor20 = factory.create(engine, peer10, "20", true);
		final Executor executor21 = factory.create(engine, peer11, "21", true);
		final Executor executor22 = factory.create(engine, peer12, "22", true);
		final Executor executor23 = factory.create(engine, peer13, "23", true);
		final Executor executor24 = factory.create(engine, peer14, "24", true);
		final Executor executor25 = factory.create(engine, peer15, "25", true);
		final Executor executor26 = factory.create(engine, peer16, "26", true);
		final Executor executor27 = factory.create(engine, peer17, "27", true);
		final Executor executor28 = factory.create(engine, peer18, "28", true);
		final Executor executor29 = factory.create(engine, peer19, "29", true);
		final Executor executor30 = factory.create(engine, peer20, "30", true);
		final Executor executor31 = factory.create(engine, peer21, "31", true);
		final Executor executor32 = factory.create(engine, peer22, "32", true);
		final Executor executor33 = factory.create(engine, peer23, "33", true);
		final Executor executor34 = factory.create(engine, peer24, "34", true);
		final Executor executor35 = factory.create(engine, peer25, "35", true);
		final Executor executor36 = factory.create(engine, peer26, "36", true);
		final Executor executor37 = factory.create(engine, peer27, "37", true);
		final Executor executor38 = factory.create(engine, peer28, "38", true);
		final Executor executor39 = factory.create(engine, peer29, "39", true);
		final Executor executor40 = factory.create(engine, peer30, "40", true);
		final Executor executor41 = factory.create(engine, peer31, "41", true);
		final Executor executor42 = factory.create(engine, peer32, "42", true);
		final Executor executor43 = factory.create(engine, peer33, "43", true);
		final Executor executor44 = factory.create(engine, peer34, "44", true);
		final Executor executor45 = factory.create(engine, peer35, "45", true);
		final Executor executor46 = factory.create(engine, peer36, "46", true);
		final Executor executor47 = factory.create(engine, peer37, "47", true);
		final Executor executor48 = factory.create(engine, peer38, "48", true);
		final Executor executor49 = factory.create(engine, peer39, "49", true);
		final Executor executor50 = factory.create(engine, peer40, "50", true);
		final Executor executor51 = factory.create(engine, peer41, "51", true);
		final Executor executor52 = factory.create(engine, peer42, "52", true);
		final Executor executor53 = factory.create(engine, peer43, "53", true);
		final Executor executor54 = factory.create(engine, peer44, "54", true);

		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(120000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer60Test() {

		ActorSystem system = ActorSystem.create("MySystem");
		OrchestratedExecutorFactory factory = new OrchestratedExecutorFactory(system);
		EngineFactory engineFactory = new EngineFactory(system);
		BIPEngine engine = engineFactory.create("myEngine", new DataCoordinatorKernel(new BIPCoordinatorImpl()));

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);

		final Executor executor1 = factory.create(engine, tracker1, "1", true);
		final Executor executor2 = factory.create(engine, tracker2, "2", true);
		final Executor executor3 = factory.create(engine, tracker3, "3", true);
		final Executor executor4 = factory.create(engine, tracker4, "4", true);
		final Executor executor5 = factory.create(engine, tracker5, "5", true);
		final Executor executor6 = factory.create(engine, tracker6, "6", true);
		final Executor executor7 = factory.create(engine, tracker7, "7", true);
		final Executor executor8 = factory.create(engine, tracker8, "8", true);
		final Executor executor9 = factory.create(engine, tracker9, "9", true);
		final Executor executor10 = factory.create(engine, tracker10, "10", true);
		final Executor executor110 = factory.create(engine, tracker110, "110", true);
		final Executor executor120 = factory.create(engine, tracker120, "120", true);
		final Executor executor11 = factory.create(engine, peer1, "11", true);
		final Executor executor12 = factory.create(engine, peer2, "12", true);
		final Executor executor13 = factory.create(engine, peer3, "13", true);
		final Executor executor14 = factory.create(engine, peer4, "14", true);
		final Executor executor15 = factory.create(engine, peer5, "15", true);
		final Executor executor16 = factory.create(engine, peer6, "16", true);
		final Executor executor17 = factory.create(engine, peer7, "17", true);
		final Executor executor18 = factory.create(engine, peer8, "18", true);
		final Executor executor19 = factory.create(engine, peer9, "19", true);
		final Executor executor20 = factory.create(engine, peer10, "20", true);
		final Executor executor21 = factory.create(engine, peer11, "21", true);
		final Executor executor22 = factory.create(engine, peer12, "22", true);
		final Executor executor23 = factory.create(engine, peer13, "23", true);
		final Executor executor24 = factory.create(engine, peer14, "24", true);
		final Executor executor25 = factory.create(engine, peer15, "25", true);
		final Executor executor26 = factory.create(engine, peer16, "26", true);
		final Executor executor27 = factory.create(engine, peer17, "27", true);
		final Executor executor28 = factory.create(engine, peer18, "28", true);
		final Executor executor29 = factory.create(engine, peer19, "29", true);
		final Executor executor30 = factory.create(engine, peer20, "30", true);
		final Executor executor31 = factory.create(engine, peer21, "31", true);
		final Executor executor32 = factory.create(engine, peer22, "32", true);
		final Executor executor33 = factory.create(engine, peer23, "33", true);
		final Executor executor34 = factory.create(engine, peer24, "34", true);
		final Executor executor35 = factory.create(engine, peer25, "35", true);
		final Executor executor36 = factory.create(engine, peer26, "36", true);
		final Executor executor37 = factory.create(engine, peer27, "37", true);
		final Executor executor38 = factory.create(engine, peer28, "38", true);
		final Executor executor39 = factory.create(engine, peer29, "39", true);
		final Executor executor40 = factory.create(engine, peer30, "40", true);
		final Executor executor41 = factory.create(engine, peer31, "41", true);
		final Executor executor42 = factory.create(engine, peer32, "42", true);
		final Executor executor43 = factory.create(engine, peer33, "43", true);
		final Executor executor44 = factory.create(engine, peer34, "44", true);
		final Executor executor45 = factory.create(engine, peer35, "45", true);
		final Executor executor46 = factory.create(engine, peer36, "46", true);
		final Executor executor47 = factory.create(engine, peer37, "47", true);
		final Executor executor48 = factory.create(engine, peer38, "48", true);
		final Executor executor49 = factory.create(engine, peer39, "49", true);
		final Executor executor50 = factory.create(engine, peer40, "50", true);
		final Executor executor51 = factory.create(engine, peer41, "51", true);
		final Executor executor52 = factory.create(engine, peer42, "52", true);
		final Executor executor53 = factory.create(engine, peer43, "53", true);
		final Executor executor54 = factory.create(engine, peer44, "54", true);
		final Executor executor55 = factory.create(engine, peer45, "55", true);
		final Executor executor56 = factory.create(engine, peer46, "56", true);
		final Executor executor57 = factory.create(engine, peer47, "57", true);
		final Executor executor58 = factory.create(engine, peer48, "58", true);

		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(150000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void TrackerPeer65Test() {

		ActorSystem system = ActorSystem.create("MySystem");
		OrchestratedExecutorFactory factory = new OrchestratedExecutorFactory(system);
		EngineFactory engineFactory = new EngineFactory(system);
		BIPEngine engine = engineFactory.create("myEngine", new DataCoordinatorKernel(new BIPCoordinatorImpl()));

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);

		final Executor executor1 = factory.create(engine, tracker1, "1", true);
		final Executor executor2 = factory.create(engine, tracker2, "2", true);
		final Executor executor3 = factory.create(engine, tracker3, "3", true);
		final Executor executor4 = factory.create(engine, tracker4, "4", true);
		final Executor executor5 = factory.create(engine, tracker5, "5", true);
		final Executor executor6 = factory.create(engine, tracker6, "6", true);
		final Executor executor7 = factory.create(engine, tracker7, "7", true);
		final Executor executor8 = factory.create(engine, tracker8, "8", true);
		final Executor executor9 = factory.create(engine, tracker9, "9", true);
		final Executor executor10 = factory.create(engine, tracker10, "10", true);
		final Executor executor110 = factory.create(engine, tracker110, "110", true);
		final Executor executor120 = factory.create(engine, tracker120, "120", true);
		final Executor executor130 = factory.create(engine, tracker130, "130", true);
		final Executor executor11 = factory.create(engine, peer1, "11", true);
		final Executor executor12 = factory.create(engine, peer2, "12", true);
		final Executor executor13 = factory.create(engine, peer3, "13", true);
		final Executor executor14 = factory.create(engine, peer4, "14", true);
		final Executor executor15 = factory.create(engine, peer5, "15", true);
		final Executor executor16 = factory.create(engine, peer6, "16", true);
		final Executor executor17 = factory.create(engine, peer7, "17", true);
		final Executor executor18 = factory.create(engine, peer8, "18", true);
		final Executor executor19 = factory.create(engine, peer9, "19", true);
		final Executor executor20 = factory.create(engine, peer10, "20", true);
		final Executor executor21 = factory.create(engine, peer11, "21", true);
		final Executor executor22 = factory.create(engine, peer12, "22", true);
		final Executor executor23 = factory.create(engine, peer13, "23", true);
		final Executor executor24 = factory.create(engine, peer14, "24", true);
		final Executor executor25 = factory.create(engine, peer15, "25", true);
		final Executor executor26 = factory.create(engine, peer16, "26", true);
		final Executor executor27 = factory.create(engine, peer17, "27", true);
		final Executor executor28 = factory.create(engine, peer18, "28", true);
		final Executor executor29 = factory.create(engine, peer19, "29", true);
		final Executor executor30 = factory.create(engine, peer20, "30", true);
		final Executor executor31 = factory.create(engine, peer21, "31", true);
		final Executor executor32 = factory.create(engine, peer22, "32", true);
		final Executor executor33 = factory.create(engine, peer23, "33", true);
		final Executor executor34 = factory.create(engine, peer24, "34", true);
		final Executor executor35 = factory.create(engine, peer25, "35", true);
		final Executor executor36 = factory.create(engine, peer26, "36", true);
		final Executor executor37 = factory.create(engine, peer27, "37", true);
		final Executor executor38 = factory.create(engine, peer28, "38", true);
		final Executor executor39 = factory.create(engine, peer29, "39", true);
		final Executor executor40 = factory.create(engine, peer30, "40", true);
		final Executor executor41 = factory.create(engine, peer31, "41", true);
		final Executor executor42 = factory.create(engine, peer32, "42", true);
		final Executor executor43 = factory.create(engine, peer33, "43", true);
		final Executor executor44 = factory.create(engine, peer34, "44", true);
		final Executor executor45 = factory.create(engine, peer35, "45", true);
		final Executor executor46 = factory.create(engine, peer36, "46", true);
		final Executor executor47 = factory.create(engine, peer37, "47", true);
		final Executor executor48 = factory.create(engine, peer38, "48", true);
		final Executor executor49 = factory.create(engine, peer39, "49", true);
		final Executor executor50 = factory.create(engine, peer40, "50", true);
		final Executor executor51 = factory.create(engine, peer41, "51", true);
		final Executor executor52 = factory.create(engine, peer42, "52", true);
		final Executor executor53 = factory.create(engine, peer43, "53", true);
		final Executor executor54 = factory.create(engine, peer44, "54", true);
		final Executor executor55 = factory.create(engine, peer45, "55", true);
		final Executor executor56 = factory.create(engine, peer46, "56", true);
		final Executor executor57 = factory.create(engine, peer47, "57", true);
		final Executor executor58 = factory.create(engine, peer48, "58", true);
		final Executor executor59 = factory.create(engine, peer49, "59", true);
		final Executor executor60 = factory.create(engine, peer50, "60", true);
		final Executor executor61 = factory.create(engine, peer51, "61", true);
		final Executor executor62 = factory.create(engine, peer52, "62", true);

		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(250000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer70Test() {

		ActorSystem system = ActorSystem.create("MySystem");
		OrchestratedExecutorFactory factory = new OrchestratedExecutorFactory(system);
		EngineFactory engineFactory = new EngineFactory(system);
		BIPEngine engine = engineFactory.create("myEngine", new DataCoordinatorKernel(new BIPCoordinatorImpl()));

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);

		final Executor executor1 = factory.create(engine, tracker1, "1", true);
		final Executor executor2 = factory.create(engine, tracker2, "2", true);
		final Executor executor3 = factory.create(engine, tracker3, "3", true);
		final Executor executor4 = factory.create(engine, tracker4, "4", true);
		final Executor executor5 = factory.create(engine, tracker5, "5", true);
		final Executor executor6 = factory.create(engine, tracker6, "6", true);
		final Executor executor7 = factory.create(engine, tracker7, "7", true);
		final Executor executor8 = factory.create(engine, tracker8, "8", true);
		final Executor executor9 = factory.create(engine, tracker9, "9", true);
		final Executor executor10 = factory.create(engine, tracker10, "10", true);
		final Executor executor110 = factory.create(engine, tracker110, "110", true);
		final Executor executor120 = factory.create(engine, tracker120, "120", true);
		final Executor executor130 = factory.create(engine, tracker130, "130", true);
		final Executor executor140 = factory.create(engine, tracker140, "140", true);
		final Executor executor11 = factory.create(engine, peer1, "11", true);
		final Executor executor12 = factory.create(engine, peer2, "12", true);
		final Executor executor13 = factory.create(engine, peer3, "13", true);
		final Executor executor14 = factory.create(engine, peer4, "14", true);
		final Executor executor15 = factory.create(engine, peer5, "15", true);
		final Executor executor16 = factory.create(engine, peer6, "16", true);
		final Executor executor17 = factory.create(engine, peer7, "17", true);
		final Executor executor18 = factory.create(engine, peer8, "18", true);
		final Executor executor19 = factory.create(engine, peer9, "19", true);
		final Executor executor20 = factory.create(engine, peer10, "20", true);
		final Executor executor21 = factory.create(engine, peer11, "21", true);
		final Executor executor22 = factory.create(engine, peer12, "22", true);
		final Executor executor23 = factory.create(engine, peer13, "23", true);
		final Executor executor24 = factory.create(engine, peer14, "24", true);
		final Executor executor25 = factory.create(engine, peer15, "25", true);
		final Executor executor26 = factory.create(engine, peer16, "26", true);
		final Executor executor27 = factory.create(engine, peer17, "27", true);
		final Executor executor28 = factory.create(engine, peer18, "28", true);
		final Executor executor29 = factory.create(engine, peer19, "29", true);
		final Executor executor30 = factory.create(engine, peer20, "30", true);
		final Executor executor31 = factory.create(engine, peer21, "31", true);
		final Executor executor32 = factory.create(engine, peer22, "32", true);
		final Executor executor33 = factory.create(engine, peer23, "33", true);
		final Executor executor34 = factory.create(engine, peer24, "34", true);
		final Executor executor35 = factory.create(engine, peer25, "35", true);
		final Executor executor36 = factory.create(engine, peer26, "36", true);
		final Executor executor37 = factory.create(engine, peer27, "37", true);
		final Executor executor38 = factory.create(engine, peer28, "38", true);
		final Executor executor39 = factory.create(engine, peer29, "39", true);
		final Executor executor40 = factory.create(engine, peer30, "40", true);
		final Executor executor41 = factory.create(engine, peer31, "41", true);
		final Executor executor42 = factory.create(engine, peer32, "42", true);
		final Executor executor43 = factory.create(engine, peer33, "43", true);
		final Executor executor44 = factory.create(engine, peer34, "44", true);
		final Executor executor45 = factory.create(engine, peer35, "45", true);
		final Executor executor46 = factory.create(engine, peer36, "46", true);
		final Executor executor47 = factory.create(engine, peer37, "47", true);
		final Executor executor48 = factory.create(engine, peer38, "48", true);
		final Executor executor49 = factory.create(engine, peer39, "49", true);
		final Executor executor50 = factory.create(engine, peer40, "50", true);
		final Executor executor51 = factory.create(engine, peer41, "51", true);
		final Executor executor52 = factory.create(engine, peer42, "52", true);
		final Executor executor53 = factory.create(engine, peer43, "53", true);
		final Executor executor54 = factory.create(engine, peer44, "54", true);
		final Executor executor55 = factory.create(engine, peer45, "55", true);
		final Executor executor56 = factory.create(engine, peer46, "56", true);
		final Executor executor57 = factory.create(engine, peer47, "57", true);
		final Executor executor58 = factory.create(engine, peer48, "58", true);
		final Executor executor59 = factory.create(engine, peer49, "59", true);
		final Executor executor60 = factory.create(engine, peer50, "60", true);
		final Executor executor61 = factory.create(engine, peer51, "61", true);
		final Executor executor62 = factory.create(engine, peer52, "62", true);
		final Executor executor63 = factory.create(engine, peer53, "63", true);
		final Executor executor64 = factory.create(engine, peer54, "64", true);
		final Executor executor65 = factory.create(engine, peer55, "65", true);
		final Executor executor66 = factory.create(engine, peer56, "66", true);

		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(350000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer75Test() {

		ActorSystem system = ActorSystem.create("MySystem");
		OrchestratedExecutorFactory factory = new OrchestratedExecutorFactory(system);
		EngineFactory engineFactory = new EngineFactory(system);
		BIPEngine engine = engineFactory.create("myEngine", new DataCoordinatorKernel(new BIPCoordinatorImpl()));

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);

		final Executor executor1 = factory.create(engine, tracker1, "1", true);
		final Executor executor2 = factory.create(engine, tracker2, "2", true);
		final Executor executor3 = factory.create(engine, tracker3, "3", true);
		final Executor executor4 = factory.create(engine, tracker4, "4", true);
		final Executor executor5 = factory.create(engine, tracker5, "5", true);
		final Executor executor6 = factory.create(engine, tracker6, "6", true);
		final Executor executor7 = factory.create(engine, tracker7, "7", true);
		final Executor executor8 = factory.create(engine, tracker8, "8", true);
		final Executor executor9 = factory.create(engine, tracker9, "9", true);
		final Executor executor10 = factory.create(engine, tracker10, "10", true);
		final Executor executor110 = factory.create(engine, tracker110, "110", true);
		final Executor executor120 = factory.create(engine, tracker120, "120", true);
		final Executor executor130 = factory.create(engine, tracker130, "130", true);
		final Executor executor140 = factory.create(engine, tracker140, "140", true);
		final Executor executor150 = factory.create(engine, tracker150, "150", true);
		final Executor executor11 = factory.create(engine, peer1, "11", true);
		final Executor executor12 = factory.create(engine, peer2, "12", true);
		final Executor executor13 = factory.create(engine, peer3, "13", true);
		final Executor executor14 = factory.create(engine, peer4, "14", true);
		final Executor executor15 = factory.create(engine, peer5, "15", true);
		final Executor executor16 = factory.create(engine, peer6, "16", true);
		final Executor executor17 = factory.create(engine, peer7, "17", true);
		final Executor executor18 = factory.create(engine, peer8, "18", true);
		final Executor executor19 = factory.create(engine, peer9, "19", true);
		final Executor executor20 = factory.create(engine, peer10, "20", true);
		final Executor executor21 = factory.create(engine, peer11, "21", true);
		final Executor executor22 = factory.create(engine, peer12, "22", true);
		final Executor executor23 = factory.create(engine, peer13, "23", true);
		final Executor executor24 = factory.create(engine, peer14, "24", true);
		final Executor executor25 = factory.create(engine, peer15, "25", true);
		final Executor executor26 = factory.create(engine, peer16, "26", true);
		final Executor executor27 = factory.create(engine, peer17, "27", true);
		final Executor executor28 = factory.create(engine, peer18, "28", true);
		final Executor executor29 = factory.create(engine, peer19, "29", true);
		final Executor executor30 = factory.create(engine, peer20, "30", true);
		final Executor executor31 = factory.create(engine, peer21, "31", true);
		final Executor executor32 = factory.create(engine, peer22, "32", true);
		final Executor executor33 = factory.create(engine, peer23, "33", true);
		final Executor executor34 = factory.create(engine, peer24, "34", true);
		final Executor executor35 = factory.create(engine, peer25, "35", true);
		final Executor executor36 = factory.create(engine, peer26, "36", true);
		final Executor executor37 = factory.create(engine, peer27, "37", true);
		final Executor executor38 = factory.create(engine, peer28, "38", true);
		final Executor executor39 = factory.create(engine, peer29, "39", true);
		final Executor executor40 = factory.create(engine, peer30, "40", true);
		final Executor executor41 = factory.create(engine, peer31, "41", true);
		final Executor executor42 = factory.create(engine, peer32, "42", true);
		final Executor executor43 = factory.create(engine, peer33, "43", true);
		final Executor executor44 = factory.create(engine, peer34, "44", true);
		final Executor executor45 = factory.create(engine, peer35, "45", true);
		final Executor executor46 = factory.create(engine, peer36, "46", true);
		final Executor executor47 = factory.create(engine, peer37, "47", true);
		final Executor executor48 = factory.create(engine, peer38, "48", true);
		final Executor executor49 = factory.create(engine, peer39, "49", true);
		final Executor executor50 = factory.create(engine, peer40, "50", true);
		final Executor executor51 = factory.create(engine, peer41, "51", true);
		final Executor executor52 = factory.create(engine, peer42, "52", true);
		final Executor executor53 = factory.create(engine, peer43, "53", true);
		final Executor executor54 = factory.create(engine, peer44, "54", true);
		final Executor executor55 = factory.create(engine, peer45, "55", true);
		final Executor executor56 = factory.create(engine, peer46, "56", true);
		final Executor executor57 = factory.create(engine, peer47, "57", true);
		final Executor executor58 = factory.create(engine, peer48, "58", true);
		final Executor executor59 = factory.create(engine, peer49, "59", true);
		final Executor executor60 = factory.create(engine, peer50, "60", true);
		final Executor executor61 = factory.create(engine, peer51, "61", true);
		final Executor executor62 = factory.create(engine, peer52, "62", true);
		final Executor executor63 = factory.create(engine, peer53, "63", true);
		final Executor executor64 = factory.create(engine, peer54, "64", true);
		final Executor executor65 = factory.create(engine, peer55, "65", true);
		final Executor executor66 = factory.create(engine, peer56, "66", true);
		final Executor executor67 = factory.create(engine, peer57, "67", true);
		final Executor executor68 = factory.create(engine, peer58, "68", true);
		final Executor executor69 = factory.create(engine, peer59, "69", true);
		final Executor executor70 = factory.create(engine, peer60, "70", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(400000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer80Test() {

		ActorSystem system = ActorSystem.create("MySystem");
		OrchestratedExecutorFactory factory = new OrchestratedExecutorFactory(system);
		EngineFactory engineFactory = new EngineFactory(system);
		BIPEngine engine = engineFactory.create("myEngine", new DataCoordinatorKernel(new BIPCoordinatorImpl()));

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Tracker tracker160 = new Tracker(160);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);
		Peer peer61 = new Peer(71);
		Peer peer62 = new Peer(72);
		Peer peer63 = new Peer(73);
		Peer peer64 = new Peer(74);

		final Executor executor1 = factory.create(engine, tracker1, "1", true);
		final Executor executor2 = factory.create(engine, tracker2, "2", true);
		final Executor executor3 = factory.create(engine, tracker3, "3", true);
		final Executor executor4 = factory.create(engine, tracker4, "4", true);
		final Executor executor5 = factory.create(engine, tracker5, "5", true);
		final Executor executor6 = factory.create(engine, tracker6, "6", true);
		final Executor executor7 = factory.create(engine, tracker7, "7", true);
		final Executor executor8 = factory.create(engine, tracker8, "8", true);
		final Executor executor9 = factory.create(engine, tracker9, "9", true);
		final Executor executor10 = factory.create(engine, tracker10, "10", true);
		final Executor executor110 = factory.create(engine, tracker110, "110", true);
		final Executor executor120 = factory.create(engine, tracker120, "120", true);
		final Executor executor130 = factory.create(engine, tracker130, "130", true);
		final Executor executor140 = factory.create(engine, tracker140, "140", true);
		final Executor executor150 = factory.create(engine, tracker150, "150", true);
		final Executor executor160 = factory.create(engine, tracker160, "160", true);
		final Executor executor11 = factory.create(engine, peer1, "11", true);
		final Executor executor12 = factory.create(engine, peer2, "12", true);
		final Executor executor13 = factory.create(engine, peer3, "13", true);
		final Executor executor14 = factory.create(engine, peer4, "14", true);
		final Executor executor15 = factory.create(engine, peer5, "15", true);
		final Executor executor16 = factory.create(engine, peer6, "16", true);
		final Executor executor17 = factory.create(engine, peer7, "17", true);
		final Executor executor18 = factory.create(engine, peer8, "18", true);
		final Executor executor19 = factory.create(engine, peer9, "19", true);
		final Executor executor20 = factory.create(engine, peer10, "20", true);
		final Executor executor21 = factory.create(engine, peer11, "21", true);
		final Executor executor22 = factory.create(engine, peer12, "22", true);
		final Executor executor23 = factory.create(engine, peer13, "23", true);
		final Executor executor24 = factory.create(engine, peer14, "24", true);
		final Executor executor25 = factory.create(engine, peer15, "25", true);
		final Executor executor26 = factory.create(engine, peer16, "26", true);
		final Executor executor27 = factory.create(engine, peer17, "27", true);
		final Executor executor28 = factory.create(engine, peer18, "28", true);
		final Executor executor29 = factory.create(engine, peer19, "29", true);
		final Executor executor30 = factory.create(engine, peer20, "30", true);
		final Executor executor31 = factory.create(engine, peer21, "31", true);
		final Executor executor32 = factory.create(engine, peer22, "32", true);
		final Executor executor33 = factory.create(engine, peer23, "33", true);
		final Executor executor34 = factory.create(engine, peer24, "34", true);
		final Executor executor35 = factory.create(engine, peer25, "35", true);
		final Executor executor36 = factory.create(engine, peer26, "36", true);
		final Executor executor37 = factory.create(engine, peer27, "37", true);
		final Executor executor38 = factory.create(engine, peer28, "38", true);
		final Executor executor39 = factory.create(engine, peer29, "39", true);
		final Executor executor40 = factory.create(engine, peer30, "40", true);
		final Executor executor41 = factory.create(engine, peer31, "41", true);
		final Executor executor42 = factory.create(engine, peer32, "42", true);
		final Executor executor43 = factory.create(engine, peer33, "43", true);
		final Executor executor44 = factory.create(engine, peer34, "44", true);
		final Executor executor45 = factory.create(engine, peer35, "45", true);
		final Executor executor46 = factory.create(engine, peer36, "46", true);
		final Executor executor47 = factory.create(engine, peer37, "47", true);
		final Executor executor48 = factory.create(engine, peer38, "48", true);
		final Executor executor49 = factory.create(engine, peer39, "49", true);
		final Executor executor50 = factory.create(engine, peer40, "50", true);
		final Executor executor51 = factory.create(engine, peer41, "51", true);
		final Executor executor52 = factory.create(engine, peer42, "52", true);
		final Executor executor53 = factory.create(engine, peer43, "53", true);
		final Executor executor54 = factory.create(engine, peer44, "54", true);
		final Executor executor55 = factory.create(engine, peer45, "55", true);
		final Executor executor56 = factory.create(engine, peer46, "56", true);
		final Executor executor57 = factory.create(engine, peer47, "57", true);
		final Executor executor58 = factory.create(engine, peer48, "58", true);
		final Executor executor59 = factory.create(engine, peer49, "59", true);
		final Executor executor60 = factory.create(engine, peer50, "60", true);
		final Executor executor61 = factory.create(engine, peer51, "61", true);
		final Executor executor62 = factory.create(engine, peer52, "62", true);
		final Executor executor63 = factory.create(engine, peer53, "63", true);
		final Executor executor64 = factory.create(engine, peer54, "64", true);
		final Executor executor65 = factory.create(engine, peer55, "65", true);
		final Executor executor66 = factory.create(engine, peer56, "66", true);
		final Executor executor67 = factory.create(engine, peer57, "67", true);
		final Executor executor68 = factory.create(engine, peer58, "68", true);
		final Executor executor69 = factory.create(engine, peer59, "69", true);
		final Executor executor70 = factory.create(engine, peer60, "70", true);
		final Executor executor71 = factory.create(engine, peer61, "71", true);
		final Executor executor72 = factory.create(engine, peer62, "72", true);
		final Executor executor73 = factory.create(engine, peer63, "73", true);
		final Executor executor74 = factory.create(engine, peer64, "74", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(550000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer85Test() {

		ActorSystem system = ActorSystem.create("MySystem");
		OrchestratedExecutorFactory factory = new OrchestratedExecutorFactory(system);
		EngineFactory engineFactory = new EngineFactory(system);
		BIPEngine engine = engineFactory.create("myEngine", new DataCoordinatorKernel(new BIPCoordinatorImpl()));

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Tracker tracker160 = new Tracker(160);
		Tracker tracker170 = new Tracker(170);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);
		Peer peer61 = new Peer(71);
		Peer peer62 = new Peer(72);
		Peer peer63 = new Peer(73);
		Peer peer64 = new Peer(74);
		Peer peer65 = new Peer(75);
		Peer peer66 = new Peer(76);
		Peer peer67 = new Peer(77);
		Peer peer68 = new Peer(78);

		final Executor executor1 = factory.create(engine, tracker1, "1", true);
		final Executor executor2 = factory.create(engine, tracker2, "2", true);
		final Executor executor3 = factory.create(engine, tracker3, "3", true);
		final Executor executor4 = factory.create(engine, tracker4, "4", true);
		final Executor executor5 = factory.create(engine, tracker5, "5", true);
		final Executor executor6 = factory.create(engine, tracker6, "6", true);
		final Executor executor7 = factory.create(engine, tracker7, "7", true);
		final Executor executor8 = factory.create(engine, tracker8, "8", true);
		final Executor executor9 = factory.create(engine, tracker9, "9", true);
		final Executor executor10 = factory.create(engine, tracker10, "10", true);
		final Executor executor110 = factory.create(engine, tracker110, "110", true);
		final Executor executor120 = factory.create(engine, tracker120, "120", true);
		final Executor executor130 = factory.create(engine, tracker130, "130", true);
		final Executor executor140 = factory.create(engine, tracker140, "140", true);
		final Executor executor150 = factory.create(engine, tracker150, "150", true);
		final Executor executor160 = factory.create(engine, tracker160, "160", true);
		final Executor executor170 = factory.create(engine, tracker170, "170", true);
		final Executor executor11 = factory.create(engine, peer1, "11", true);
		final Executor executor12 = factory.create(engine, peer2, "12", true);
		final Executor executor13 = factory.create(engine, peer3, "13", true);
		final Executor executor14 = factory.create(engine, peer4, "14", true);
		final Executor executor15 = factory.create(engine, peer5, "15", true);
		final Executor executor16 = factory.create(engine, peer6, "16", true);
		final Executor executor17 = factory.create(engine, peer7, "17", true);
		final Executor executor18 = factory.create(engine, peer8, "18", true);
		final Executor executor19 = factory.create(engine, peer9, "19", true);
		final Executor executor20 = factory.create(engine, peer10, "20", true);
		final Executor executor21 = factory.create(engine, peer11, "21", true);
		final Executor executor22 = factory.create(engine, peer12, "22", true);
		final Executor executor23 = factory.create(engine, peer13, "23", true);
		final Executor executor24 = factory.create(engine, peer14, "24", true);
		final Executor executor25 = factory.create(engine, peer15, "25", true);
		final Executor executor26 = factory.create(engine, peer16, "26", true);
		final Executor executor27 = factory.create(engine, peer17, "27", true);
		final Executor executor28 = factory.create(engine, peer18, "28", true);
		final Executor executor29 = factory.create(engine, peer19, "29", true);
		final Executor executor30 = factory.create(engine, peer20, "30", true);
		final Executor executor31 = factory.create(engine, peer21, "31", true);
		final Executor executor32 = factory.create(engine, peer22, "32", true);
		final Executor executor33 = factory.create(engine, peer23, "33", true);
		final Executor executor34 = factory.create(engine, peer24, "34", true);
		final Executor executor35 = factory.create(engine, peer25, "35", true);
		final Executor executor36 = factory.create(engine, peer26, "36", true);
		final Executor executor37 = factory.create(engine, peer27, "37", true);
		final Executor executor38 = factory.create(engine, peer28, "38", true);
		final Executor executor39 = factory.create(engine, peer29, "39", true);
		final Executor executor40 = factory.create(engine, peer30, "40", true);
		final Executor executor41 = factory.create(engine, peer31, "41", true);
		final Executor executor42 = factory.create(engine, peer32, "42", true);
		final Executor executor43 = factory.create(engine, peer33, "43", true);
		final Executor executor44 = factory.create(engine, peer34, "44", true);
		final Executor executor45 = factory.create(engine, peer35, "45", true);
		final Executor executor46 = factory.create(engine, peer36, "46", true);
		final Executor executor47 = factory.create(engine, peer37, "47", true);
		final Executor executor48 = factory.create(engine, peer38, "48", true);
		final Executor executor49 = factory.create(engine, peer39, "49", true);
		final Executor executor50 = factory.create(engine, peer40, "50", true);
		final Executor executor51 = factory.create(engine, peer41, "51", true);
		final Executor executor52 = factory.create(engine, peer42, "52", true);
		final Executor executor53 = factory.create(engine, peer43, "53", true);
		final Executor executor54 = factory.create(engine, peer44, "54", true);
		final Executor executor55 = factory.create(engine, peer45, "55", true);
		final Executor executor56 = factory.create(engine, peer46, "56", true);
		final Executor executor57 = factory.create(engine, peer47, "57", true);
		final Executor executor58 = factory.create(engine, peer48, "58", true);
		final Executor executor59 = factory.create(engine, peer49, "59", true);
		final Executor executor60 = factory.create(engine, peer50, "60", true);
		final Executor executor61 = factory.create(engine, peer51, "61", true);
		final Executor executor62 = factory.create(engine, peer52, "62", true);
		final Executor executor63 = factory.create(engine, peer53, "63", true);
		final Executor executor64 = factory.create(engine, peer54, "64", true);
		final Executor executor65 = factory.create(engine, peer55, "65", true);
		final Executor executor66 = factory.create(engine, peer56, "66", true);
		final Executor executor67 = factory.create(engine, peer57, "67", true);
		final Executor executor68 = factory.create(engine, peer58, "68", true);
		final Executor executor69 = factory.create(engine, peer59, "69", true);
		final Executor executor70 = factory.create(engine, peer60, "70", true);
		final Executor executor71 = factory.create(engine, peer61, "71", true);
		final Executor executor72 = factory.create(engine, peer62, "72", true);
		final Executor executor73 = factory.create(engine, peer63, "73", true);
		final Executor executor74 = factory.create(engine, peer64, "74", true);
		final Executor executor75 = factory.create(engine, peer65, "75", true);
		final Executor executor76 = factory.create(engine, peer66, "76", true);
		final Executor executor77 = factory.create(engine, peer67, "77", true);
		final Executor executor78 = factory.create(engine, peer68, "78", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(700000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer90Test() {

		ActorSystem system = ActorSystem.create("MySystem");
		OrchestratedExecutorFactory factory = new OrchestratedExecutorFactory(system);
		EngineFactory engineFactory = new EngineFactory(system);
		BIPEngine engine = engineFactory.create("myEngine", new DataCoordinatorKernel(new BIPCoordinatorImpl()));

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Tracker tracker160 = new Tracker(160);
		Tracker tracker170 = new Tracker(170);
		Tracker tracker180 = new Tracker(180);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);
		Peer peer61 = new Peer(71);
		Peer peer62 = new Peer(72);
		Peer peer63 = new Peer(73);
		Peer peer64 = new Peer(74);
		Peer peer65 = new Peer(75);
		Peer peer66 = new Peer(76);
		Peer peer67 = new Peer(77);
		Peer peer68 = new Peer(78);
		Peer peer69 = new Peer(79);
		Peer peer70 = new Peer(80);
		Peer peer71 = new Peer(81);
		Peer peer72 = new Peer(82);

		final Executor executor1 = factory.create(engine, tracker1, "1", true);
		final Executor executor2 = factory.create(engine, tracker2, "2", true);
		final Executor executor3 = factory.create(engine, tracker3, "3", true);
		final Executor executor4 = factory.create(engine, tracker4, "4", true);
		final Executor executor5 = factory.create(engine, tracker5, "5", true);
		final Executor executor6 = factory.create(engine, tracker6, "6", true);
		final Executor executor7 = factory.create(engine, tracker7, "7", true);
		final Executor executor8 = factory.create(engine, tracker8, "8", true);
		final Executor executor9 = factory.create(engine, tracker9, "9", true);
		final Executor executor10 = factory.create(engine, tracker10, "10", true);
		final Executor executor110 = factory.create(engine, tracker110, "110", true);
		final Executor executor120 = factory.create(engine, tracker120, "120", true);
		final Executor executor130 = factory.create(engine, tracker130, "130", true);
		final Executor executor140 = factory.create(engine, tracker140, "140", true);
		final Executor executor150 = factory.create(engine, tracker150, "150", true);
		final Executor executor160 = factory.create(engine, tracker160, "160", true);
		final Executor executor170 = factory.create(engine, tracker170, "170", true);
		final Executor executor180 = factory.create(engine, tracker180, "180", true);
		final Executor executor11 = factory.create(engine, peer1, "11", true);
		final Executor executor12 = factory.create(engine, peer2, "12", true);
		final Executor executor13 = factory.create(engine, peer3, "13", true);
		final Executor executor14 = factory.create(engine, peer4, "14", true);
		final Executor executor15 = factory.create(engine, peer5, "15", true);
		final Executor executor16 = factory.create(engine, peer6, "16", true);
		final Executor executor17 = factory.create(engine, peer7, "17", true);
		final Executor executor18 = factory.create(engine, peer8, "18", true);
		final Executor executor19 = factory.create(engine, peer9, "19", true);
		final Executor executor20 = factory.create(engine, peer10, "20", true);
		final Executor executor21 = factory.create(engine, peer11, "21", true);
		final Executor executor22 = factory.create(engine, peer12, "22", true);
		final Executor executor23 = factory.create(engine, peer13, "23", true);
		final Executor executor24 = factory.create(engine, peer14, "24", true);
		final Executor executor25 = factory.create(engine, peer15, "25", true);
		final Executor executor26 = factory.create(engine, peer16, "26", true);
		final Executor executor27 = factory.create(engine, peer17, "27", true);
		final Executor executor28 = factory.create(engine, peer18, "28", true);
		final Executor executor29 = factory.create(engine, peer19, "29", true);
		final Executor executor30 = factory.create(engine, peer20, "30", true);
		final Executor executor31 = factory.create(engine, peer21, "31", true);
		final Executor executor32 = factory.create(engine, peer22, "32", true);
		final Executor executor33 = factory.create(engine, peer23, "33", true);
		final Executor executor34 = factory.create(engine, peer24, "34", true);
		final Executor executor35 = factory.create(engine, peer25, "35", true);
		final Executor executor36 = factory.create(engine, peer26, "36", true);
		final Executor executor37 = factory.create(engine, peer27, "37", true);
		final Executor executor38 = factory.create(engine, peer28, "38", true);
		final Executor executor39 = factory.create(engine, peer29, "39", true);
		final Executor executor40 = factory.create(engine, peer30, "40", true);
		final Executor executor41 = factory.create(engine, peer31, "41", true);
		final Executor executor42 = factory.create(engine, peer32, "42", true);
		final Executor executor43 = factory.create(engine, peer33, "43", true);
		final Executor executor44 = factory.create(engine, peer34, "44", true);
		final Executor executor45 = factory.create(engine, peer35, "45", true);
		final Executor executor46 = factory.create(engine, peer36, "46", true);
		final Executor executor47 = factory.create(engine, peer37, "47", true);
		final Executor executor48 = factory.create(engine, peer38, "48", true);
		final Executor executor49 = factory.create(engine, peer39, "49", true);
		final Executor executor50 = factory.create(engine, peer40, "50", true);
		final Executor executor51 = factory.create(engine, peer41, "51", true);
		final Executor executor52 = factory.create(engine, peer42, "52", true);
		final Executor executor53 = factory.create(engine, peer43, "53", true);
		final Executor executor54 = factory.create(engine, peer44, "54", true);
		final Executor executor55 = factory.create(engine, peer45, "55", true);
		final Executor executor56 = factory.create(engine, peer46, "56", true);
		final Executor executor57 = factory.create(engine, peer47, "57", true);
		final Executor executor58 = factory.create(engine, peer48, "58", true);
		final Executor executor59 = factory.create(engine, peer49, "59", true);
		final Executor executor60 = factory.create(engine, peer50, "60", true);
		final Executor executor61 = factory.create(engine, peer51, "61", true);
		final Executor executor62 = factory.create(engine, peer52, "62", true);
		final Executor executor63 = factory.create(engine, peer53, "63", true);
		final Executor executor64 = factory.create(engine, peer54, "64", true);
		final Executor executor65 = factory.create(engine, peer55, "65", true);
		final Executor executor66 = factory.create(engine, peer56, "66", true);
		final Executor executor67 = factory.create(engine, peer57, "67", true);
		final Executor executor68 = factory.create(engine, peer58, "68", true);
		final Executor executor69 = factory.create(engine, peer59, "69", true);
		final Executor executor70 = factory.create(engine, peer60, "70", true);
		final Executor executor71 = factory.create(engine, peer61, "71", true);
		final Executor executor72 = factory.create(engine, peer62, "72", true);
		final Executor executor73 = factory.create(engine, peer63, "73", true);
		final Executor executor74 = factory.create(engine, peer64, "74", true);
		final Executor executor75 = factory.create(engine, peer65, "75", true);
		final Executor executor76 = factory.create(engine, peer66, "76", true);
		final Executor executor77 = factory.create(engine, peer67, "77", true);
		final Executor executor78 = factory.create(engine, peer68, "78", true);
		final Executor executor79 = factory.create(engine, peer69, "79", true);
		final Executor executor80 = factory.create(engine, peer70, "80", true);
		final Executor executor81 = factory.create(engine, peer71, "81", true);
		final Executor executor82 = factory.create(engine, peer72, "82", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(700000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer95Test() {

		ActorSystem system = ActorSystem.create("MySystem");
		OrchestratedExecutorFactory factory = new OrchestratedExecutorFactory(system);
		EngineFactory engineFactory = new EngineFactory(system);
		BIPEngine engine = engineFactory.create("myEngine", new DataCoordinatorKernel(new BIPCoordinatorImpl()));

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Tracker tracker160 = new Tracker(160);
		Tracker tracker170 = new Tracker(170);
		Tracker tracker180 = new Tracker(180);
		Tracker tracker190 = new Tracker(190);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);
		Peer peer61 = new Peer(71);
		Peer peer62 = new Peer(72);
		Peer peer63 = new Peer(73);
		Peer peer64 = new Peer(74);
		Peer peer65 = new Peer(75);
		Peer peer66 = new Peer(76);
		Peer peer67 = new Peer(77);
		Peer peer68 = new Peer(78);
		Peer peer69 = new Peer(79);
		Peer peer70 = new Peer(80);
		Peer peer71 = new Peer(81);
		Peer peer72 = new Peer(82);
		Peer peer73 = new Peer(83);
		Peer peer74 = new Peer(84);
		Peer peer75 = new Peer(85);
		Peer peer76 = new Peer(86);

		final Executor executor1 = factory.create(engine, tracker1, "1", true);
		final Executor executor2 = factory.create(engine, tracker2, "2", true);
		final Executor executor3 = factory.create(engine, tracker3, "3", true);
		final Executor executor4 = factory.create(engine, tracker4, "4", true);
		final Executor executor5 = factory.create(engine, tracker5, "5", true);
		final Executor executor6 = factory.create(engine, tracker6, "6", true);
		final Executor executor7 = factory.create(engine, tracker7, "7", true);
		final Executor executor8 = factory.create(engine, tracker8, "8", true);
		final Executor executor9 = factory.create(engine, tracker9, "9", true);
		final Executor executor10 = factory.create(engine, tracker10, "10", true);
		final Executor executor110 = factory.create(engine, tracker110, "110", true);
		final Executor executor120 = factory.create(engine, tracker120, "120", true);
		final Executor executor130 = factory.create(engine, tracker130, "130", true);
		final Executor executor140 = factory.create(engine, tracker140, "140", true);
		final Executor executor150 = factory.create(engine, tracker150, "150", true);
		final Executor executor160 = factory.create(engine, tracker160, "160", true);
		final Executor executor170 = factory.create(engine, tracker170, "170", true);
		final Executor executor180 = factory.create(engine, tracker180, "180", true);
		final Executor executor190 = factory.create(engine, tracker190, "190", true);
		final Executor executor11 = factory.create(engine, peer1, "11", true);
		final Executor executor12 = factory.create(engine, peer2, "12", true);
		final Executor executor13 = factory.create(engine, peer3, "13", true);
		final Executor executor14 = factory.create(engine, peer4, "14", true);
		final Executor executor15 = factory.create(engine, peer5, "15", true);
		final Executor executor16 = factory.create(engine, peer6, "16", true);
		final Executor executor17 = factory.create(engine, peer7, "17", true);
		final Executor executor18 = factory.create(engine, peer8, "18", true);
		final Executor executor19 = factory.create(engine, peer9, "19", true);
		final Executor executor20 = factory.create(engine, peer10, "20", true);
		final Executor executor21 = factory.create(engine, peer11, "21", true);
		final Executor executor22 = factory.create(engine, peer12, "22", true);
		final Executor executor23 = factory.create(engine, peer13, "23", true);
		final Executor executor24 = factory.create(engine, peer14, "24", true);
		final Executor executor25 = factory.create(engine, peer15, "25", true);
		final Executor executor26 = factory.create(engine, peer16, "26", true);
		final Executor executor27 = factory.create(engine, peer17, "27", true);
		final Executor executor28 = factory.create(engine, peer18, "28", true);
		final Executor executor29 = factory.create(engine, peer19, "29", true);
		final Executor executor30 = factory.create(engine, peer20, "30", true);
		final Executor executor31 = factory.create(engine, peer21, "31", true);
		final Executor executor32 = factory.create(engine, peer22, "32", true);
		final Executor executor33 = factory.create(engine, peer23, "33", true);
		final Executor executor34 = factory.create(engine, peer24, "34", true);
		final Executor executor35 = factory.create(engine, peer25, "35", true);
		final Executor executor36 = factory.create(engine, peer26, "36", true);
		final Executor executor37 = factory.create(engine, peer27, "37", true);
		final Executor executor38 = factory.create(engine, peer28, "38", true);
		final Executor executor39 = factory.create(engine, peer29, "39", true);
		final Executor executor40 = factory.create(engine, peer30, "40", true);
		final Executor executor41 = factory.create(engine, peer31, "41", true);
		final Executor executor42 = factory.create(engine, peer32, "42", true);
		final Executor executor43 = factory.create(engine, peer33, "43", true);
		final Executor executor44 = factory.create(engine, peer34, "44", true);
		final Executor executor45 = factory.create(engine, peer35, "45", true);
		final Executor executor46 = factory.create(engine, peer36, "46", true);
		final Executor executor47 = factory.create(engine, peer37, "47", true);
		final Executor executor48 = factory.create(engine, peer38, "48", true);
		final Executor executor49 = factory.create(engine, peer39, "49", true);
		final Executor executor50 = factory.create(engine, peer40, "50", true);
		final Executor executor51 = factory.create(engine, peer41, "51", true);
		final Executor executor52 = factory.create(engine, peer42, "52", true);
		final Executor executor53 = factory.create(engine, peer43, "53", true);
		final Executor executor54 = factory.create(engine, peer44, "54", true);
		final Executor executor55 = factory.create(engine, peer45, "55", true);
		final Executor executor56 = factory.create(engine, peer46, "56", true);
		final Executor executor57 = factory.create(engine, peer47, "57", true);
		final Executor executor58 = factory.create(engine, peer48, "58", true);
		final Executor executor59 = factory.create(engine, peer49, "59", true);
		final Executor executor60 = factory.create(engine, peer50, "60", true);
		final Executor executor61 = factory.create(engine, peer51, "61", true);
		final Executor executor62 = factory.create(engine, peer52, "62", true);
		final Executor executor63 = factory.create(engine, peer53, "63", true);
		final Executor executor64 = factory.create(engine, peer54, "64", true);
		final Executor executor65 = factory.create(engine, peer55, "65", true);
		final Executor executor66 = factory.create(engine, peer56, "66", true);
		final Executor executor67 = factory.create(engine, peer57, "67", true);
		final Executor executor68 = factory.create(engine, peer58, "68", true);
		final Executor executor69 = factory.create(engine, peer59, "69", true);
		final Executor executor70 = factory.create(engine, peer60, "70", true);
		final Executor executor71 = factory.create(engine, peer61, "71", true);
		final Executor executor72 = factory.create(engine, peer62, "72", true);
		final Executor executor73 = factory.create(engine, peer63, "73", true);
		final Executor executor74 = factory.create(engine, peer64, "74", true);
		final Executor executor75 = factory.create(engine, peer65, "75", true);
		final Executor executor76 = factory.create(engine, peer66, "76", true);
		final Executor executor77 = factory.create(engine, peer67, "77", true);
		final Executor executor78 = factory.create(engine, peer68, "78", true);
		final Executor executor79 = factory.create(engine, peer69, "79", true);
		final Executor executor80 = factory.create(engine, peer70, "80", true);
		final Executor executor81 = factory.create(engine, peer71, "81", true);
		final Executor executor82 = factory.create(engine, peer72, "82", true);
		final Executor executor83 = factory.create(engine, peer73, "83", true);
		final Executor executor84 = factory.create(engine, peer74, "84", true);
		final Executor executor85 = factory.create(engine, peer75, "85", true);
		final Executor executor86 = factory.create(engine, peer76, "86", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(700000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer100Test() {

		ActorSystem system = ActorSystem.create("MySystem");
		OrchestratedExecutorFactory factory = new OrchestratedExecutorFactory(system);
		EngineFactory engineFactory = new EngineFactory(system);
		BIPEngine engine = engineFactory.create("myEngine", new DataCoordinatorKernel(new BIPCoordinatorImpl()));

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Tracker tracker160 = new Tracker(160);
		Tracker tracker170 = new Tracker(170);
		Tracker tracker180 = new Tracker(180);
		Tracker tracker190 = new Tracker(190);
		Tracker tracker200 = new Tracker(200);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);
		Peer peer61 = new Peer(71);
		Peer peer62 = new Peer(72);
		Peer peer63 = new Peer(73);
		Peer peer64 = new Peer(74);
		Peer peer65 = new Peer(75);
		Peer peer66 = new Peer(76);
		Peer peer67 = new Peer(77);
		Peer peer68 = new Peer(78);
		Peer peer69 = new Peer(79);
		Peer peer70 = new Peer(80);
		Peer peer71 = new Peer(81);
		Peer peer72 = new Peer(82);
		Peer peer73 = new Peer(83);
		Peer peer74 = new Peer(84);
		Peer peer75 = new Peer(85);
		Peer peer76 = new Peer(86);
		Peer peer77 = new Peer(87);
		Peer peer78 = new Peer(88);
		Peer peer79 = new Peer(89);
		Peer peer80 = new Peer(90);

		final Executor executor1 = factory.create(engine, tracker1, "1", true);
		final Executor executor2 = factory.create(engine, tracker2, "2", true);
		final Executor executor3 = factory.create(engine, tracker3, "3", true);
		final Executor executor4 = factory.create(engine, tracker4, "4", true);
		final Executor executor5 = factory.create(engine, tracker5, "5", true);
		final Executor executor6 = factory.create(engine, tracker6, "6", true);
		final Executor executor7 = factory.create(engine, tracker7, "7", true);
		final Executor executor8 = factory.create(engine, tracker8, "8", true);
		final Executor executor9 = factory.create(engine, tracker9, "9", true);
		final Executor executor10 = factory.create(engine, tracker10, "10", true);
		final Executor executor110 = factory.create(engine, tracker110, "110", true);
		final Executor executor120 = factory.create(engine, tracker120, "120", true);
		final Executor executor130 = factory.create(engine, tracker130, "130", true);
		final Executor executor140 = factory.create(engine, tracker140, "140", true);
		final Executor executor150 = factory.create(engine, tracker150, "150", true);
		final Executor executor160 = factory.create(engine, tracker160, "160", true);
		final Executor executor170 = factory.create(engine, tracker170, "170", true);
		final Executor executor180 = factory.create(engine, tracker180, "180", true);
		final Executor executor190 = factory.create(engine, tracker190, "190", true);
		final Executor executor200 = factory.create(engine, tracker200, "200", true);
		final Executor executor11 = factory.create(engine, peer1, "11", true);
		final Executor executor12 = factory.create(engine, peer2, "12", true);
		final Executor executor13 = factory.create(engine, peer3, "13", true);
		final Executor executor14 = factory.create(engine, peer4, "14", true);
		final Executor executor15 = factory.create(engine, peer5, "15", true);
		final Executor executor16 = factory.create(engine, peer6, "16", true);
		final Executor executor17 = factory.create(engine, peer7, "17", true);
		final Executor executor18 = factory.create(engine, peer8, "18", true);
		final Executor executor19 = factory.create(engine, peer9, "19", true);
		final Executor executor20 = factory.create(engine, peer10, "20", true);
		final Executor executor21 = factory.create(engine, peer11, "21", true);
		final Executor executor22 = factory.create(engine, peer12, "22", true);
		final Executor executor23 = factory.create(engine, peer13, "23", true);
		final Executor executor24 = factory.create(engine, peer14, "24", true);
		final Executor executor25 = factory.create(engine, peer15, "25", true);
		final Executor executor26 = factory.create(engine, peer16, "26", true);
		final Executor executor27 = factory.create(engine, peer17, "27", true);
		final Executor executor28 = factory.create(engine, peer18, "28", true);
		final Executor executor29 = factory.create(engine, peer19, "29", true);
		final Executor executor30 = factory.create(engine, peer20, "30", true);
		final Executor executor31 = factory.create(engine, peer21, "31", true);
		final Executor executor32 = factory.create(engine, peer22, "32", true);
		final Executor executor33 = factory.create(engine, peer23, "33", true);
		final Executor executor34 = factory.create(engine, peer24, "34", true);
		final Executor executor35 = factory.create(engine, peer25, "35", true);
		final Executor executor36 = factory.create(engine, peer26, "36", true);
		final Executor executor37 = factory.create(engine, peer27, "37", true);
		final Executor executor38 = factory.create(engine, peer28, "38", true);
		final Executor executor39 = factory.create(engine, peer29, "39", true);
		final Executor executor40 = factory.create(engine, peer30, "40", true);
		final Executor executor41 = factory.create(engine, peer31, "41", true);
		final Executor executor42 = factory.create(engine, peer32, "42", true);
		final Executor executor43 = factory.create(engine, peer33, "43", true);
		final Executor executor44 = factory.create(engine, peer34, "44", true);
		final Executor executor45 = factory.create(engine, peer35, "45", true);
		final Executor executor46 = factory.create(engine, peer36, "46", true);
		final Executor executor47 = factory.create(engine, peer37, "47", true);
		final Executor executor48 = factory.create(engine, peer38, "48", true);
		final Executor executor49 = factory.create(engine, peer39, "49", true);
		final Executor executor50 = factory.create(engine, peer40, "50", true);
		final Executor executor51 = factory.create(engine, peer41, "51", true);
		final Executor executor52 = factory.create(engine, peer42, "52", true);
		final Executor executor53 = factory.create(engine, peer43, "53", true);
		final Executor executor54 = factory.create(engine, peer44, "54", true);
		final Executor executor55 = factory.create(engine, peer45, "55", true);
		final Executor executor56 = factory.create(engine, peer46, "56", true);
		final Executor executor57 = factory.create(engine, peer47, "57", true);
		final Executor executor58 = factory.create(engine, peer48, "58", true);
		final Executor executor59 = factory.create(engine, peer49, "59", true);
		final Executor executor60 = factory.create(engine, peer50, "60", true);
		final Executor executor61 = factory.create(engine, peer51, "61", true);
		final Executor executor62 = factory.create(engine, peer52, "62", true);
		final Executor executor63 = factory.create(engine, peer53, "63", true);
		final Executor executor64 = factory.create(engine, peer54, "64", true);
		final Executor executor65 = factory.create(engine, peer55, "65", true);
		final Executor executor66 = factory.create(engine, peer56, "66", true);
		final Executor executor67 = factory.create(engine, peer57, "67", true);
		final Executor executor68 = factory.create(engine, peer58, "68", true);
		final Executor executor69 = factory.create(engine, peer59, "69", true);
		final Executor executor70 = factory.create(engine, peer60, "70", true);
		final Executor executor71 = factory.create(engine, peer61, "71", true);
		final Executor executor72 = factory.create(engine, peer62, "72", true);
		final Executor executor73 = factory.create(engine, peer63, "73", true);
		final Executor executor74 = factory.create(engine, peer64, "74", true);
		final Executor executor75 = factory.create(engine, peer65, "75", true);
		final Executor executor76 = factory.create(engine, peer66, "76", true);
		final Executor executor77 = factory.create(engine, peer67, "77", true);
		final Executor executor78 = factory.create(engine, peer68, "78", true);
		final Executor executor79 = factory.create(engine, peer69, "79", true);
		final Executor executor80 = factory.create(engine, peer70, "80", true);
		final Executor executor81 = factory.create(engine, peer71, "81", true);
		final Executor executor82 = factory.create(engine, peer72, "82", true);
		final Executor executor83 = factory.create(engine, peer73, "83", true);
		final Executor executor84 = factory.create(engine, peer74, "84", true);
		final Executor executor85 = factory.create(engine, peer75, "85", true);
		final Executor executor86 = factory.create(engine, peer76, "86", true);
		final Executor executor87 = factory.create(engine, peer77, "87", true);
		final Executor executor88 = factory.create(engine, peer78, "88", true);
		final Executor executor89 = factory.create(engine, peer79, "89", true);
		final Executor executor90 = factory.create(engine, peer80, "90", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(700000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	private BIPGlue createGlue(String bipGlueFilename) {
		BIPGlue bipGlue = null;

		InputStream inputStream;
		try {
			inputStream = new FileInputStream(bipGlueFilename);

			bipGlue = GlueBuilder.fromXML(inputStream);

		} catch (FileNotFoundException e) {

			e.printStackTrace();
		}
		return bipGlue;
	}

	@Test
	// Compute time in seconds for 1000 iterations
	public void computeTimeInSecsfor1000Iterations() throws IOException {
		int i;
		for (i = 5; i < 55; i = i + 5) {

			File file = new File("/home/mavridou/workspace/javaengineperformance/TrackersPeers/Time/100000Nodes/"
					+ "TP" + i
					+ ".txt");
			FileReader fileReader = new FileReader(file);
			BufferedReader bufferedReader = new BufferedReader(fileReader);
			String line;
			int count = 0;
			double sum = 0;
			bufferedReader.readLine();
			while ((line = bufferedReader.readLine()) != null) {
				if (count == 1000)
					break;
				if (!line.equals("")) {
					sum += Integer.parseInt(line);
					count++;
				}
			}
			if (count == 0)
				return;
			System.out.println(i + " " + sum / 1000);
		}
	}

	@Test
	// Compute time in seconds for 1000 iterations
	public void computeAverage() throws IOException {
		int i;
		for (i = 5; i < 55; i = i + 5) {

			File file = new File("/home/mavridou/workspace/javaengineperformance/TrackersPeers/Time/100000Nodes/"
					+ "TP"
					+ i
					+ ".txt");
			FileReader fileReader = new FileReader(file);
			BufferedReader bufferedReader = new BufferedReader(fileReader);
			String line;
			int count = 0;
			double sum = 0;
			bufferedReader.readLine();
			while ((line = bufferedReader.readLine()) != null) {
				if (!line.equals("")) {
					sum += Integer.parseInt(line);
					count++;
				}
			}
			if (count == 0)
				return;
			System.out.println(i + " " + sum / count + " for iterations: " + count);
		}
	}
}
